// Code generated from Expr.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 32, 214,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 3, 2, 3, 2, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3,
	6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3,
	8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3,
	13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17,
	3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3,
	21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23,
	3, 23, 3, 23, 3, 23, 3, 23, 5, 23, 139, 10, 23, 3, 24, 3, 24, 3, 24, 3,
	24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 6, 26, 160, 10, 26, 13, 26, 14, 26,
	161, 3, 27, 3, 27, 7, 27, 166, 10, 27, 12, 27, 14, 27, 169, 11, 27, 3,
	27, 3, 27, 3, 28, 6, 28, 174, 10, 28, 13, 28, 14, 28, 175, 3, 29, 3, 29,
	7, 29, 180, 10, 29, 12, 29, 14, 29, 183, 11, 29, 3, 29, 3, 29, 7, 29, 187,
	10, 29, 12, 29, 14, 29, 190, 11, 29, 7, 29, 192, 10, 29, 12, 29, 14, 29,
	195, 11, 29, 3, 29, 3, 29, 3, 30, 3, 30, 7, 30, 201, 10, 30, 12, 30, 14,
	30, 204, 11, 30, 3, 30, 3, 30, 3, 31, 6, 31, 209, 10, 31, 13, 31, 14, 31,
	210, 3, 31, 3, 31, 6, 167, 181, 188, 202, 2, 32, 3, 3, 5, 4, 7, 5, 9, 6,
	11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29,
	16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47,
	25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 3, 2, 5, 3,
	2, 50, 59, 7, 2, 46, 46, 48, 48, 67, 92, 97, 97, 99, 124, 5, 2, 11, 12,
	15, 15, 34, 34, 2, 222, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2,
	2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3,
	2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23,
	3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2,
	31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2,
	2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2,
	2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2,
	2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3,
	2, 2, 2, 3, 63, 3, 2, 2, 2, 5, 65, 3, 2, 2, 2, 7, 67, 3, 2, 2, 2, 9, 69,
	3, 2, 2, 2, 11, 77, 3, 2, 2, 2, 13, 81, 3, 2, 2, 2, 15, 88, 3, 2, 2, 2,
	17, 93, 3, 2, 2, 2, 19, 95, 3, 2, 2, 2, 21, 97, 3, 2, 2, 2, 23, 99, 3,
	2, 2, 2, 25, 101, 3, 2, 2, 2, 27, 103, 3, 2, 2, 2, 29, 105, 3, 2, 2, 2,
	31, 108, 3, 2, 2, 2, 33, 111, 3, 2, 2, 2, 35, 114, 3, 2, 2, 2, 37, 117,
	3, 2, 2, 2, 39, 120, 3, 2, 2, 2, 41, 123, 3, 2, 2, 2, 43, 126, 3, 2, 2,
	2, 45, 138, 3, 2, 2, 2, 47, 140, 3, 2, 2, 2, 49, 148, 3, 2, 2, 2, 51, 159,
	3, 2, 2, 2, 53, 163, 3, 2, 2, 2, 55, 173, 3, 2, 2, 2, 57, 177, 3, 2, 2,
	2, 59, 198, 3, 2, 2, 2, 61, 208, 3, 2, 2, 2, 63, 64, 7, 63, 2, 2, 64, 4,
	3, 2, 2, 2, 65, 66, 7, 42, 2, 2, 66, 6, 3, 2, 2, 2, 67, 68, 7, 43, 2, 2,
	68, 8, 3, 2, 2, 2, 69, 70, 7, 100, 2, 2, 70, 71, 7, 113, 2, 2, 71, 72,
	7, 113, 2, 2, 72, 73, 7, 110, 2, 2, 73, 74, 7, 103, 2, 2, 74, 75, 7, 99,
	2, 2, 75, 76, 7, 112, 2, 2, 76, 10, 3, 2, 2, 2, 77, 78, 7, 107, 2, 2, 78,
	79, 7, 112, 2, 2, 79, 80, 7, 118, 2, 2, 80, 12, 3, 2, 2, 2, 81, 82, 7,
	117, 2, 2, 82, 83, 7, 118, 2, 2, 83, 84, 7, 116, 2, 2, 84, 85, 7, 107,
	2, 2, 85, 86, 7, 112, 2, 2, 86, 87, 7, 105, 2, 2, 87, 14, 3, 2, 2, 2, 88,
	89, 7, 110, 2, 2, 89, 90, 7, 107, 2, 2, 90, 91, 7, 117, 2, 2, 91, 92, 7,
	118, 2, 2, 92, 16, 3, 2, 2, 2, 93, 94, 7, 44, 2, 2, 94, 18, 3, 2, 2, 2,
	95, 96, 7, 49, 2, 2, 96, 20, 3, 2, 2, 2, 97, 98, 7, 45, 2, 2, 98, 22, 3,
	2, 2, 2, 99, 100, 7, 47, 2, 2, 100, 24, 3, 2, 2, 2, 101, 102, 7, 64, 2,
	2, 102, 26, 3, 2, 2, 2, 103, 104, 7, 62, 2, 2, 104, 28, 3, 2, 2, 2, 105,
	106, 7, 62, 2, 2, 106, 107, 7, 63, 2, 2, 107, 30, 3, 2, 2, 2, 108, 109,
	7, 64, 2, 2, 109, 110, 7, 63, 2, 2, 110, 32, 3, 2, 2, 2, 111, 112, 7, 63,
	2, 2, 112, 113, 7, 63, 2, 2, 113, 34, 3, 2, 2, 2, 114, 115, 7, 35, 2, 2,
	115, 116, 7, 63, 2, 2, 116, 36, 3, 2, 2, 2, 117, 118, 7, 40, 2, 2, 118,
	119, 7, 40, 2, 2, 119, 38, 3, 2, 2, 2, 120, 121, 7, 126, 2, 2, 121, 122,
	7, 126, 2, 2, 122, 40, 3, 2, 2, 2, 123, 124, 7, 107, 2, 2, 124, 125, 7,
	112, 2, 2, 125, 42, 3, 2, 2, 2, 126, 127, 7, 116, 2, 2, 127, 128, 7, 103,
	2, 2, 128, 44, 3, 2, 2, 2, 129, 130, 7, 118, 2, 2, 130, 131, 7, 116, 2,
	2, 131, 132, 7, 119, 2, 2, 132, 139, 7, 103, 2, 2, 133, 134, 7, 104, 2,
	2, 134, 135, 7, 99, 2, 2, 135, 136, 7, 110, 2, 2, 136, 137, 7, 117, 2,
	2, 137, 139, 7, 103, 2, 2, 138, 129, 3, 2, 2, 2, 138, 133, 3, 2, 2, 2,
	139, 46, 3, 2, 2, 2, 140, 141, 5, 51, 26, 2, 141, 142, 7, 48, 2, 2, 142,
	143, 5, 51, 26, 2, 143, 144, 7, 48, 2, 2, 144, 145, 5, 51, 26, 2, 145,
	146, 7, 48, 2, 2, 146, 147, 5, 51, 26, 2, 147, 48, 3, 2, 2, 2, 148, 149,
	5, 51, 26, 2, 149, 150, 7, 48, 2, 2, 150, 151, 5, 51, 26, 2, 151, 152,
	7, 48, 2, 2, 152, 153, 5, 51, 26, 2, 153, 154, 7, 48, 2, 2, 154, 155, 5,
	51, 26, 2, 155, 156, 7, 49, 2, 2, 156, 157, 5, 51, 26, 2, 157, 50, 3, 2,
	2, 2, 158, 160, 9, 2, 2, 2, 159, 158, 3, 2, 2, 2, 160, 161, 3, 2, 2, 2,
	161, 159, 3, 2, 2, 2, 161, 162, 3, 2, 2, 2, 162, 52, 3, 2, 2, 2, 163, 167,
	7, 36, 2, 2, 164, 166, 11, 2, 2, 2, 165, 164, 3, 2, 2, 2, 166, 169, 3,
	2, 2, 2, 167, 168, 3, 2, 2, 2, 167, 165, 3, 2, 2, 2, 168, 170, 3, 2, 2,
	2, 169, 167, 3, 2, 2, 2, 170, 171, 7, 36, 2, 2, 171, 54, 3, 2, 2, 2, 172,
	174, 9, 3, 2, 2, 173, 172, 3, 2, 2, 2, 174, 175, 3, 2, 2, 2, 175, 173,
	3, 2, 2, 2, 175, 176, 3, 2, 2, 2, 176, 56, 3, 2, 2, 2, 177, 181, 7, 93,
	2, 2, 178, 180, 11, 2, 2, 2, 179, 178, 3, 2, 2, 2, 180, 183, 3, 2, 2, 2,
	181, 182, 3, 2, 2, 2, 181, 179, 3, 2, 2, 2, 182, 193, 3, 2, 2, 2, 183,
	181, 3, 2, 2, 2, 184, 188, 7, 46, 2, 2, 185, 187, 11, 2, 2, 2, 186, 185,
	3, 2, 2, 2, 187, 190, 3, 2, 2, 2, 188, 189, 3, 2, 2, 2, 188, 186, 3, 2,
	2, 2, 189, 192, 3, 2, 2, 2, 190, 188, 3, 2, 2, 2, 191, 184, 3, 2, 2, 2,
	192, 195, 3, 2, 2, 2, 193, 191, 3, 2, 2, 2, 193, 194, 3, 2, 2, 2, 194,
	196, 3, 2, 2, 2, 195, 193, 3, 2, 2, 2, 196, 197, 7, 95, 2, 2, 197, 58,
	3, 2, 2, 2, 198, 202, 7, 98, 2, 2, 199, 201, 11, 2, 2, 2, 200, 199, 3,
	2, 2, 2, 201, 204, 3, 2, 2, 2, 202, 203, 3, 2, 2, 2, 202, 200, 3, 2, 2,
	2, 203, 205, 3, 2, 2, 2, 204, 202, 3, 2, 2, 2, 205, 206, 7, 98, 2, 2, 206,
	60, 3, 2, 2, 2, 207, 209, 9, 4, 2, 2, 208, 207, 3, 2, 2, 2, 209, 210, 3,
	2, 2, 2, 210, 208, 3, 2, 2, 2, 210, 211, 3, 2, 2, 2, 211, 212, 3, 2, 2,
	2, 212, 213, 8, 31, 2, 2, 213, 62, 3, 2, 2, 2, 12, 2, 138, 161, 167, 175,
	181, 188, 193, 202, 210, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'='", "'('", "')'", "'boolean'", "'int'", "'string'", "'list'", "'*'",
	"'/'", "'+'", "'-'", "'>'", "'<'", "'<='", "'>='", "'=='", "'!='", "'&&'",
	"'||'", "'in'", "'re'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "BOOLEAN", "INT", "STRING", "LIST", "MUL", "DIV", "ADD",
	"SUB", "GT", "LT", "LE", "GE", "EQUAL", "NOTEQUAL", "AND", "OR", "IN",
	"RE", "BooleanLiteral", "IP", "CIDR", "IntLiteral", "StringLiteral", "ID",
	"List", "Reg", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "BOOLEAN", "INT", "STRING", "LIST", "MUL", "DIV",
	"ADD", "SUB", "GT", "LT", "LE", "GE", "EQUAL", "NOTEQUAL", "AND", "OR",
	"IN", "RE", "BooleanLiteral", "IP", "CIDR", "IntLiteral", "StringLiteral",
	"ID", "List", "Reg", "WS",
}

type ExprLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewExprLexer(input antlr.CharStream) *ExprLexer {

	l := new(ExprLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Expr.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ExprLexer tokens.
const (
	ExprLexerT__0           = 1
	ExprLexerT__1           = 2
	ExprLexerT__2           = 3
	ExprLexerBOOLEAN        = 4
	ExprLexerINT            = 5
	ExprLexerSTRING         = 6
	ExprLexerLIST           = 7
	ExprLexerMUL            = 8
	ExprLexerDIV            = 9
	ExprLexerADD            = 10
	ExprLexerSUB            = 11
	ExprLexerGT             = 12
	ExprLexerLT             = 13
	ExprLexerLE             = 14
	ExprLexerGE             = 15
	ExprLexerEQUAL          = 16
	ExprLexerNOTEQUAL       = 17
	ExprLexerAND            = 18
	ExprLexerOR             = 19
	ExprLexerIN             = 20
	ExprLexerRE             = 21
	ExprLexerBooleanLiteral = 22
	ExprLexerIP             = 23
	ExprLexerCIDR           = 24
	ExprLexerIntLiteral     = 25
	ExprLexerStringLiteral  = 26
	ExprLexerID             = 27
	ExprLexerList           = 28
	ExprLexerReg            = 29
	ExprLexerWS             = 30
)
